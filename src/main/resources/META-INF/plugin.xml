<idea-plugin>
    <id>io.github.pelletier197.fixkture</id>
    <name>Fixkture</name>
    <vendor url="https://github.com/pelletier197">pelletier197</vendor>

    <idea-version since-build="202" />

    <description><![CDATA[
    Do you write tests (I sincerely hope you do)? Are you tired of writing test fixtures for your 30 fields DTO? Here's the solution!

    This plugin allows you to generate a fixture of any desired class, for both Kotlin and Java (even though you should consider switching to Kotlin, since is a way far superior language). Fields of this class will be given arbitrary values when being generated.
    <br>
    <b>Usage</b>
    <br>
    Anywhere in your test class, hit <b>ctrl+shift+G</b>. You'll be prompt to select a target class, and the fixture will be automatically resolved!
    <br>
    <b>Generated code</b>
    <br>
    This plugin supports complex data models and most common types from Java/Kotlin Standard Library
    <li>For classes with ambiguous constructors, you'll be prompt to choose which constructor to take to instantiate the class</li>
    <li>For collections, it will automatically generate a collection of the right type, with one element in it</li>
    <li>Recursive objects are supported. The recursion will however stop at one level</li>
    <br>
    <b>Contribute</b>
    <br>
    Feel free to create an issue on <a href="https://github.com/pelletier197/Fixkture">Github</a> or even to open your own PR. I developed this project for personal usage, but i'm open to suggestions or improvement ideas.
    ]]></description>

    <change-notes><![CDATA[
    <div>
        <b>1.4.0</b>
        <li>Add interface fixture generation support with target implementation selector</li>
        <li>Use code style name suggestion</li>
        <b>1.3.1</b>
        <li>Fix intellij compatibility</li>
        <b>1.3.0</b>
        <li>Add support for enum values</li>
        <b>1.1.0</b>
        <li>Add support for HashMap and TreeMap</li>
        <b>1.0.0</b>
        <li>Initial implementations for collections, primitive types, objects, recursive objects and common Java STL types</li>
    </div>
    ]]></change-notes>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>org.jetbrains.kotlin</depends>

    <actions>
        <action id="io.github.pelletier197.fixkture.api.GenerateFixtureAction"
                class="io.github.pelletier197.fixkture.api.GenerateFixtureAction" text="Fixture"
                description="Generates a fixture for a target class">
            <add-to-group group-id="GenerateGroup" anchor="first"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl G"/>
        </action>
    </actions>
</idea-plugin>